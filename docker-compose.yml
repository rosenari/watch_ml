services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: fastapi
    ports:
      - '8000:8000'
    volumes:
      - './backend/app:/src/app'
      - './backend/dataset_archive:/src/dataset_archive'
      - './backend/main.py:/src/main.py'
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - PYTHONUNBUFFERED=1
      - FILE_DIRECTORY=/src/dataset_archive
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - monitoring_network
  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.16.2
    environment:
      - MLFLOW_TRACKING_URI=http://0.0.0.0:5000
    volumes:
      - ./backend/mlruns:/mlflow/mlruns
    ports:
      - '5000:5000'
    command: mlflow server --backend-store-uri sqlite:///mlflow.db --default-artifact-root /mlflow/mlruns --host 0.0.0.0
    networks:
      - monitoring_network
  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.worker
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    depends_on:
      - redis
    volumes:
      - './backend/app:/src/app'
      - './backend/dataset_archive:/src/dataset_archive'
      - './backend/mlruns:/src/runs'
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_ARCHIVE_PATH=/src/dataset_archive
      - VALID_ARCHIVE_MODULE_PATH=valid_archive
      - CELERY_ML_RUNS_PATH=/src/runs
    runtime: nvidia
    shm_size: '1g'
    command: celery -A app.tasks.main worker --loglevel=info --concurrency=1 --pool=threads
    networks:
      - monitoring_network
  redis:
    image: redis:7.4
    ports:
      - '6379:6379'
    networks:
      - monitoring_network

networks:
  monitoring_network:
